import { isSport } from "../../../common";

let potEstimator: (ovr: number, age: number, pos?: string) => number;

// This was generated by using bootstrapPot a bunch of times and then doing linear regression to find the
// coefficients for predicting pot. This is needed for football/hockey because pot is calculated for many
// different positions, making it unreasonably slow. For basketball, it is only used in one place.
if (isSport("football") || isSport("hockey")) {
	let coeffsByPos: Record<
		string,
		{
			intercept: number;
			age: number;
			ovr: number;
			interaction: number;
		}
	>;
	if (isSport("football")) {
		// See analysis/pot-estimator-football
		coeffsByPos = {
			CB: {
				intercept: 41.22339,
				age: -1.55671,
				ovr: 1.73043,
				interaction: -0.02711,
			},
			DL: {
				intercept: 50.39196,
				age: -1.91082,
				ovr: 2.00579,
				interaction: -0.03759,
			},
			K: {
				intercept: 35.997,
				age: -1.349,
				ovr: 1.834,
				interaction: -0.032,
			},
			KR: {
				intercept: 39.62046,
				age: -1.47839,
				ovr: 1.67194,
				interaction: -0.02539,
			},
			LB: {
				intercept: 36.72401,
				age: -1.37224,
				ovr: 1.91346,
				interaction: -0.03444,
			},
			OL: {
				intercept: 38.22024,
				age: -1.44549,
				ovr: 2.13113,
				interaction: -0.04226,
			},
			P: {
				intercept: 36.09308,
				age: -1.3511,
				ovr: 1.90802,
				interaction: -0.03557,
			},
			PR: {
				intercept: 38.16013,
				age: -1.42061,
				ovr: 1.93835,
				interaction: -0.03559,
			},
			QB: {
				intercept: 47.34247,
				age: -1.78499,
				ovr: 2.12059,
				interaction: -0.04236,
			},
			RB: {
				intercept: 18.70945,
				age: -0.69679,
				ovr: 2.40819,
				interaction: -0.05307,
			},
			S: {
				intercept: 42.84427,
				age: -1.62036,
				ovr: 1.99803,
				interaction: -0.03686,
			},
			TE: {
				intercept: 28.15031,
				age: -1.05288,
				ovr: 2.27735,
				interaction: -0.04792,
			},
			WR: {
				intercept: 46.83016,
				age: -1.75311,
				ovr: 1.76216,
				interaction: -0.02886,
			},
		};
	} else {
		// See analysis/pot-estimator-hockey
		coeffsByPos = {
			C: {
				intercept: 80.6422965,
				age: -3.05006202,
				ovr: 0.6486725,
				interaction: 0.01448313,
			},
			W: {
				intercept: 68.0307412,
				age: -2.55261434,
				ovr: 0.88896865,
				interaction: 0.00506265,
			},
			D: {
				intercept: 88.7269404,
				age: -3.3507586,
				ovr: 0.54694889,
				interaction: 0.01839313,
			},
			G: {
				intercept: 102.9871616,
				age: -3.82414489,
				ovr: 0.57276983,
				interaction: 0.01685319,
			},
		};
	}

	potEstimator = (ovr: number, age: number, pos?: string) => {
		// https://github.com/microsoft/TypeScript/issues/21732
		// @ts-expect-error
		const coeffs = coeffsByPos[pos];
		if (!coeffs) {
			throw new Error(`Invalid position "${pos}" in potEstimator`);
		}

		return (
			coeffs.intercept +
			coeffs.age * age +
			coeffs.ovr * ovr +
			coeffs.interaction * age * ovr
		);
	};
} else {
	// See analysis/pot-estimator-basketball
	potEstimator = (ovr: number, age: number) => {
		if (age >= 29) {
			return ovr;
		}

		return 72.31428908571982 + -2.33062761 * age + 0.83308748 * ovr;
	};
}

export default potEstimator;
